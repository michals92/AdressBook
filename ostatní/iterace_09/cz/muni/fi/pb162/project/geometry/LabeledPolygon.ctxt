#BlueJ class context
comment0.params=label\ vert
comment0.target=void\ addVertex(java.lang.String,\ Vertex2D)
comment0.text=\n\ Add\ vertex\ to\ polygon\n\ \n\ @param\ label\ -\ label\ of\ vertex\n\ @param\ value\ -\ value\ of\ vertex\n
comment1.params=label
comment1.target=Vertex2D\ getVertex(java.lang.String)
comment1.text=\n\ Returns\ vertex\ of\ specified\ name\n\ \n\ @param\ label\ -\ name\ of\ vertex\ \n\ @return\ vertex\ -\ value\ of\ vertex\n
comment10.params=file
comment10.target=void\ read(java.io.File)
comment10.text=\n\ Reads\ vertices\ and\ their\ labels\ from\ file\n\ \n\ @param\ File\ file\ -\ specified\ file\n\ @throws\ IOException\ -\ when\ read\ error\n
comment11.params=os
comment11.target=void\ write(java.io.OutputStream)
comment11.text=\n\ Writes\ all\ vertices\ and\ their\ labels\ into\ OutputStream\n\ \n\ @param\ OutpustStream\ os\ -\ output\ to\ write\n\ @throws\ IOException\ -\ when\ write\ error\n
comment12.params=file
comment12.target=void\ write(java.io.File)
comment12.text=\n\ Writes\ all\ vertices\ and\ their\ labels\ into\ file\n\ \n\ @param\ File\ file\ -\ file\ to\ write\n\ @throws\ IOException\ -\ when\ write\ error\n
comment13.params=os
comment13.target=void\ binaryWrite(java.io.OutputStream)
comment13.text=\n\ Writes\ all\ vertices\ and\ their\ labels\ into\ OutputStream\ binary\n\ \n\ @param\ OutpustStream\ os\ -\ output\ to\ write\n\ @throws\ IOException\ -\ when\ write\ error\n
comment2.params=index
comment2.target=Vertex2D\ getVertex(int)
comment2.text=\n\ Returns\ vertex\ on\ specified\ index\n\ \n\ @param\ index\ -\ number\ of\ index\n\ @return\ vertex\ at\ given\ index\ modulo\ number\ of\ indices\n\ @throws\ IllegalArgumentException\ if\ index\ is\ negative\n
comment3.params=
comment3.target=int\ getNumVertices()
comment3.text=\n\ Returns\ number\ of\ vertices\ of\ the\ polygon.\n\ \n\ @return\ number\ of\ vertices\n
comment4.params=
comment4.target=java.util.Collection\ getLabels()
comment4.text=\n\ Returns\ collection\ of\ labels\ ascendently.\n\ \n\ @return\ set\ of\ labels\n
comment5.params=
comment5.target=java.util.Collection\ getSortedVertices()
comment5.text=\n\ Returns\ sorted\ vertices\n\ \n\ @return\ set\ of\ sorted\ vertices\n
comment6.params=comparator
comment6.target=java.util.Collection\ getSortedVertices(java.util.Comparator)
comment6.text=\n\ Returns\ sorted\ vertices\ with\ defined\ comparator\n\ \n\ @param\ comparator\n\ @return\ set\ of\ sorted\ vertices\n
comment7.params=vert
comment7.target=java.util.Collection\ getLabels(Vertex2D)
comment7.text=\n\ Returns\ labels\ of\ all\ vertices\ with\ same\ position\n\ \n\ @param\ vert\ position\ \n\ @return\ set\ of\ labels\n
comment8.params=
comment8.target=java.util.Collection\ duplicateVertices()
comment8.text=\n\ Returns\ vertices\ that\ are\ duplicates\n\ \n\ @return\ set\ of\ equal\ vertices\n
comment9.params=is
comment9.target=void\ read(java.io.InputStream)
comment9.text=\n\ Reads\ vertices\ and\ their\ labels\ from\ InputStream\n\ \n\ @param\ InputStream\ is\ -\ specified\ stream\ to\ read\n\ @throws\ IOException\ -\ when\ read\ error\n
numComments=14
